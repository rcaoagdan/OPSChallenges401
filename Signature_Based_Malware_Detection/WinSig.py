#!/usr/bin/evn python3

##############################################################################
# Information
##############################################################################

# Windows Functions to be called upon for Signature Based Malware Detection

##############################################################################
# Import Library
##############################################################################
import os,sys,subprocess
from os import path
import hashlib
from datetime import datetime
import logging
import demo
import SigBased

##############################################################################
# Functions
##############################################################################
def WinMainMenu():
    print("*" * 75)
    print("O/S WINDOWS Files: Signature Based Malware Detection \n")
    print("1.Search for file")
    print("2.Look into a directory:")
    print("3.VirusTotal")
    print("4.Exit")
    winOPT = input("What would you like to do? ")

    if(winOPT == "1"):
        WinFileSearch()
    elif(winOPT == "2"):
        Win_Hash()
    elif(winOPT == "3"):
        Win_Virustotal()
    elif(winOPT == "4"):
        SigBased.sigExit()
    else:
        print("Invalid Selection")

#################################################
# Searches for filename in chosen directory     #
#################################################        
def WinFileSearch():
    print("*" * 75)
    print("WINDOWS FILE SEARCH \n")
    logging.basicConfig(filename='WINFILES.log', level=logging.DEBUG)
    filename = input("Please Enter a File to Search For:")
    path = input( "Please Enter a Directory:")
    
    
    print("*" * 75)
    print("Looking for files named:" + filename + "\n")
    logging.info("Looking for file" + filename + " in directory " + path)

#################################################
# Prints Contents of a directory                #
#################################################
    for root, dirs, files in os.walk(path):
        if filename in files:
            print("File FOUND")
            WinFile=os.path.join(root,filename)
            print(WinFile)
            logging.info("File found in " + os.path.join(root,filename))
        else:
            logging.error("NO FILES FOUND in " + os.path.join(root,filename))
    WinMainMenu()
#################################################
# Checking Hash                                 # 
#################################################
def Win_Hash():
    print("*" * 75)
    print("Window Hash Files")
    directory = input("Enter a directory: ")

    for file in os.listdir(directory):
        print(file)
        logging.info("Listed contents of directory: " + directory)
    print("*" * 75)
    print("Now checking MD5 hash values")

    for root, dirs, files in os.walk(directory):
        for file in files:
            FileName = (os.path.join(root,file))
            fileHash = hashlib.md5()
            fSize = os.path.getsize(FileName)
            with open(str(FileName),"rb") as hFiles:
                hashedFiles = hFiles.read()
                fileHash.update(hashedFiles)
            print(str(datetime.now()) + " | " + str(FileName) + " | " + str(fSize) + " bytes" + " | " + str(fileHash.hexdigest()))
            logging.info("Hashed values of " + directory + " printed out.")
    WinMainMenu()
#################################################
# VirusTotal                                    # 
#################################################
def Win_Virustotal():
    print("*" * 75)
    print("Window Hash Files -- Virustotal")
    apikey = ('31554f7e856c88b4def8466266bb23a82003383109880e751b8d856b4ef866f6')
    hash = input("Enter a hash to check: ")
    query = 'python3 virustotal-search.py -k ' + str(apikey) + ' -m ' + hash 
    os.system(query)
    WinMainMenu()
   
  